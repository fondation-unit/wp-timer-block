{"version":3,"file":"view.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,eAAeA,CAACC,UAAU,EAAE;EACnC;EACA,MAAMC,OAAO,GAAGD,UAAU,CAACE,aAAa,CAAC,UAAU,CAAC;EACpD,MAAMC,YAAY,GAAGH,UAAU,CAACE,aAAa,CAAC,eAAe,CAAC;;EAE9D;EACA,MAAME,QAAQ,GAAGJ,UAAU,CAACE,aAAa,CAAC,gBAAgB,CAAC;EAC3D,MAAMG,QAAQ,GAAGL,UAAU,CAACE,aAAa,CAAC,gBAAgB,CAAC;;EAE3D;EACA,MAAMI,QAAQ,GAAGN,UAAU,CAACO,OAAO,CAACD,QAAQ,IAAI,EAAE;EAClD,IAAIE,QAAQ,GAAGF,QAAQ;EACvB,IAAIG,SAAS,GAAG,KAAK;EAErB,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1BN,QAAQ,CAACO,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;IACnCP,QAAQ,CAACM,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;EACrC,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBL,QAAQ,GAAGF,QAAQ;IACnBG,SAAS,GAAG,KAAK;IACjBR,OAAO,CAACa,SAAS,GAAG,EAAE;IACtBJ,aAAa,CAAC,CAAC;EACjB,CAAC;EAEDN,QAAQ,CAACW,gBAAgB,CAAC,OAAO,EAAE,MAAM;IACvCL,aAAa,CAAC,CAAC;IACfD,SAAS,GAAG,IAAI;IAEhB,IAAIO,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/B,IAAIT,QAAQ,KAAK,CAAC,EAAE;QAClBK,UAAU,CAAC,CAAC;QACZK,aAAa,CAACF,QAAQ,CAAC;MACzB;MAEA,IAAIP,SAAS,IAAID,QAAQ,GAAG,CAAC,EAAE;QAC7BA,QAAQ,IAAI,CAAC;QAEbP,OAAO,CAACa,SAAS,GAAG,EAAE;QACtBb,OAAO,CAACkB,SAAS,GAAGX,QAAQ;QAC5BL,YAAY,CAACiB,YAAY,CAAC,OAAO,EAAE,EAAE,CAAC;QACtCjB,YAAY,CAACkB,KAAK,CAACC,gBAAgB,GAAI,GAAG,IAAIhB,QAAQ,GAAGE,QAAQ,CAAC,GAAIF,QAAQ;QAE9E,IAAIE,QAAQ,GAAGF,QAAQ,GAAG,CAAC,GAAG,CAAC,EAAE;UAC/BH,YAAY,CAACQ,SAAS,CAACY,GAAG,CAAC,OAAO,CAAC;UACnCtB,OAAO,CAACU,SAAS,CAACY,GAAG,CAAC,OAAO,CAAC;QAChC,CAAC,MAAM,IAAIf,QAAQ,GAAGF,QAAQ,GAAG,CAAC,EAAE;UAClCH,YAAY,CAACQ,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;UACpCtB,OAAO,CAACU,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;QACjC,CAAC,MAAM;UACLpB,YAAY,CAACQ,SAAS,CAACY,GAAG,CAAC,KAAK,CAAC;UACjCtB,OAAO,CAACU,SAAS,CAACY,GAAG,CAAC,KAAK,CAAC;QAC9B;MACF;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;EAEFlB,QAAQ,CAACU,gBAAgB,CAAC,OAAO,EAAE,MAAM;IACvCN,SAAS,GAAG,CAACA,SAAS;EACxB,CAAC,CAAC;AACJ;AAGA,MAAMe,MAAM,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,QAAQ,CAAC;AAClDF,MAAM,CAACG,OAAO,CAAC3B,UAAU,IAAI;EAC3BD,eAAe,CAACC,UAAU,CAAC;AAC7B,CAAC,CAAC,C","sources":["webpack://timer-block/./src/view.js"],"sourcesContent":["/**\n * Use this file for JavaScript code that you want to run in the front-end\n * on posts/pages that contain this block.\n *\n * When this file is defined as the value of the `viewScript` property\n * in `block.json` it will be enqueued on the front end of the site.\n *\n * Example:\n *\n * ```js\n * {\n *   \"viewScript\": \"file:./view.js\"\n * }\n * ```\n *\n * If you're not making any changes to this file because your project doesn't need any\n * JavaScript running in the front-end, then you should delete this file and remove\n * the `viewScript` property from `block.json`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata/#view-script\n */\n\n\nfunction initializeTimer(timerBlock) {\n  // Elements\n  const seconds = timerBlock.querySelector('#seconds');\n  const timerseconds = timerBlock.querySelector('#timerseconds');\n\n  // Buttons\n  const startBtn = timerBlock.querySelector('.btn.btn-start');\n  const pauseBtn = timerBlock.querySelector('.btn.btn-pause');\n\n  // State\n  const duration = timerBlock.dataset.duration || 60\n  let timeleft = duration;\n  let isRunning = false;\n\n  const toggleButtons = () => {\n    startBtn.classList.toggle('d-none');\n    pauseBtn.classList.toggle('d-none');\n  }\n\n  const resetState = () => {\n    timeleft = duration;\n    isRunning = false;\n    seconds.className = \"\";\n    toggleButtons();\n  }\n\n  startBtn.addEventListener('click', () => {\n    toggleButtons();\n    isRunning = true;\n\n    let interval = setInterval(() => {\n      if (timeleft === 0) {\n        resetState();\n        clearInterval(interval);\n      }\n\n      if (isRunning && timeleft > 0) {\n        timeleft -= 1;\n\n        seconds.className = \"\";\n        seconds.innerHTML = timeleft;\n        timerseconds.setAttribute('class', '');\n        timerseconds.style.strokeDashoffset = (440 * (duration - timeleft)) / duration;\n\n        if (timeleft > duration / 3 * 2) {\n          timerseconds.classList.add(\"green\");\n          seconds.classList.add(\"green\");\n        } else if (timeleft > duration / 3) {\n          timerseconds.classList.add(\"yellow\");\n          seconds.classList.add(\"yellow\");\n        } else {\n          timerseconds.classList.add(\"red\");\n          seconds.classList.add(\"red\");\n        }\n      }\n    }, 1000);\n  });\n\n  pauseBtn.addEventListener('click', () => {\n    isRunning = !isRunning;\n  });\n}\n\n\nconst timers = document.querySelectorAll('.timer');\ntimers.forEach(timerBlock => {\n  initializeTimer(timerBlock);\n});"],"names":["initializeTimer","timerBlock","seconds","querySelector","timerseconds","startBtn","pauseBtn","duration","dataset","timeleft","isRunning","toggleButtons","classList","toggle","resetState","className","addEventListener","interval","setInterval","clearInterval","innerHTML","setAttribute","style","strokeDashoffset","add","timers","document","querySelectorAll","forEach"],"sourceRoot":""}